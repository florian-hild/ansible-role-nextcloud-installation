user www-data;
worker_processes auto;
pid /var/run/nginx.pid;

# provides the configuration file context in which the directives that affect connectios processing are specified.
events {
  worker_connections 2048;
  multi_accept on;
  use epoll;
}

http {
  log_format criegerde escape=json
  '{'
    '"time_local":"$time_local",'
    '"remote_addr":"$remote_addr",'
    '"remote_user":"$remote_user",'
    '"request":"$request",'
    '"status": "$status",'
    '"body_bytes_sent":"$body_bytes_sent",'
    '"request_time":"$request_time",'
    '"http_referrer":"$http_referer",'
    '"http_user_agent":"$http_user_agent"'
  '}';

  server_names_hash_bucket_size 64;

  # To boost I/O on HDD we can disable access logs
  access_log off;
  # access_log /var/log/nginx/access.log criegerde;
  error_log /var/log/nginx/error.log warn;

  # cache informations about FDs, frequently accessed files
  # can boost performance, but you need to test those values
  open_file_cache max=500 inactive=10m;
  # open_file_cache max=200000 inactive=20s;
  open_file_cache_valid 30s;
  open_file_cache_min_uses 2;
  open_file_cache_errors on;

  # copies data between one FD and other from within the kernel
  # faster than read() + write()
  sendfile on;

  # send headers in one piece, it is better than sending them one by one
  tcp_nopush on;

  # don't buffer data sent, good for small data bursts in real time
   tcp_nodelay on;

   # reduce the data that needs to be sent over network -- for testing environment
  gzip on;
  # gzip_static on;
  gzip_min_length 10240;
  gzip_comp_level 1;
  gzip_vary on;
  gzip_disable msie6;
  gzip_proxied expired no-cache no-store private auth;
  gzip_types
    # text/html is always compressed by HttpGzipModule
    text/css
    text/javascript
    text/xml
    text/plain
    text/x-component
    application/javascript
    application/x-javascript
    application/json
    application/xml
    application/rss+xml
    application/atom+xml
    font/truetype
    font/opentype
    application/vnd.ms-fontobject
    image/svg+xml;

  # allow the server to close connection on non responding client, this will free up memory
  reset_timedout_connection on;

  # request timed out -- default 60
  client_body_timeout 20;

  # if client stop responding, free up memory -- default 60
  send_timeout 3600;

  # server will close connection after this time -- default 75
  keepalive_timeout 65;

  # number of requests client can make over keep-alive -- for testing environment
  keepalive_requests 100000;


  # set_real_ip_from 127.0.0.1;
  # IP of reverse Proxy damit die ip auf die externe umgeschrieben wird
 {% if reverse_proxy_ip %}
  set_real_ip_from {{ reverse_proxy_ip }};
{% endif %}
  real_ip_header X-Forwarded-For;
  real_ip_recursive on;

  server_tokens off;

  # DNS Server
  resolver 127.0.0.53 valid=30s;
  resolver_timeout 5s;

  # Default value: text/plain
  default_type application/octet-stream;

  include /etc/nginx/mime.types;
  include /etc/nginx/conf.d/*.conf;
}
